name: ‚ôªÔ∏è Actualizar cache_bust y timestamp aleatoriamente

on:
  schedule:
    - cron: '0 0 * * *'  # Una vez al d√≠a a las 00:00 UTC
  workflow_dispatch:

jobs:
  random-commits:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      - name: Configurar Git
        run: |
          git config user.name "marichu-kt"
          git config user.email "marichu-kt@users.noreply.github.com"

      - name: Hacer entre 1 y 10 commits aleatorios
        run: |
          NUM_COMMITS=$(( (RANDOM % 10) + 1 ))
          echo "üîÅ Se har√°n $NUM_COMMITS commits hoy."

          for i in $(seq 1 $NUM_COMMITS); do
            FECHA=$(date -u '+%Y%m%d')
            TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S UTC')

            echo "üõ†Ô∏è Iteraci√≥n $i: $TIMESTAMP"

            # Actualiza el README.md
            sed -i "1s|^.*$|<!-- √öltima actualizaci√≥n: $TIMESTAMP -->|" README.md
            sed -i -E 's|(https://github-readme-stats\.vercel\.app/api/pin/[^"]*)&cache_bust=[0-9]{8}|\1|g' README.md
            sed -i -E 's|(src="https://github-readme-stats\.vercel\.app/api/pin/[^"]+)(\")|\1\&cache_bust='"$FECHA"'\2|g' README.md

            # Commit si hay cambios
            if git diff --quiet; then
              echo "‚úÖ Sin cambios, no se comitea esta vez."
            else
              git add README.md
              git commit -m "‚ôªÔ∏è cache_bust $i/$NUM_COMMITS actualizado a $FECHA"
              git push
              echo "‚úÖ Commit $i enviado."
            fi

            # Dormir aleatoriamente entre 5 min y 2 horas antes del siguiente commit
            if [ "$i" -lt "$NUM_COMMITS" ]; then
              SLEEP_MIN=$(( (RANDOM % 115) + 5 ))  # 5 a 120 minutos
              echo "üïí Esperando $SLEEP_MIN minutos antes del siguiente commit..."
              sleep "${SLEEP_MIN}m"
            fi
          done
